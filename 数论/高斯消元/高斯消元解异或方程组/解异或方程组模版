import java.lang.*;
import java.io.*;
import java.util.*;

public class Learn {
    /*
    高斯消元解决异或方程组
    解异或方程组和加法很相似,就是用两行异或
     */
    public static int MAXN = 101;
    public static int[][] mat = new int[MAXN][MAXN];
    public static void swap(int x,int y){
        int[] tmp = mat[x];
        mat[x] = mat[y];
        mat[y] = tmp;
    }
    public static void gauss(int n){
        for(int i = 1;i <= n;i++){
            for(int j = 1;j <= n;j++){
                if(j < i && mat[j][j] == 1){
                    continue;
                }
                //有1直接换上来
                if(mat[j][i] == 1){
                    swap(i,j);
                    break;
                }
            }
            if(mat[i][i] == 1){
                for(int j = 1;j <= n;j++){
                    if(i != j && mat[j][i] == 1){
                        for(int k = i;k <= n + 1;k++){
                            mat[j][k] ^= mat[i][k];
                        }
                    }
                }
            }
        }
    }



    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StreamTokenizer in = new StreamTokenizer(br);
        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));

        out.flush();
        out.close();
        br.close();
    }
}



