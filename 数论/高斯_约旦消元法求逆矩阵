#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int INF = 0x3f3f3f3f;
const int N = 405;
const int p = 1e9 + 7;
const double esp = 1e-6;
const int hash = 1331;
const double PI = acos(-1);


//建立的n * 2n的矩阵进行消元,求逆矩阵
ll a[N][N << 1];
int n;

ll power(ll a,ll b){
    ll ans = 1;
    while(b){
        if(b & 1) ans = ans * a % p;
        a = a * a % p;
        b >>= 1;
    }
    return ans;
}

bool Gauss_Jordan(){
    for(int i = 1;i <= n;i++){
        int r = i;
        for(int k = i;k <= n;k++){
            if(a[k][i]){
                r = k;
                break;
            }
        }
        if(r != i){
            swap(a[r],a[i]);
        }
        if(!a[i][i]) return 0;
        int x = power(a[i][i],p - 2);
        for(int k = 1;k <= n;k++){
            if(k == i) continue;
            int t = a[k][i] * x % p;
            for(int j = i;j <= 2 * n;j++){
                a[k][j] = ((a[k][j] - t * a[i][j]) % p + p) % p;
            }
        }
        for(int j = 1;j <= 2 * n;j++){
            a[i][j] = (a[i][j] * x % p);
        }
    }
    return 1;
}

/*
高斯-约旦消元法求矩阵的逆
对于方阵A,若存在B使得A * B = B * A = I,则称B为A的逆矩阵,记为A^-1
给出n阶方阵A,求解其逆矩阵A^(-1)的方法
1.构造n * 2n的矩阵(A,I)
2.用约旦高斯消元法将其简化为(I,A^(-1))即可得到A的逆矩阵A(-1)
证明:因为AX = I,那么X = A^(-1)I,即A^(-1) = IX
(和线代中求逆矩阵是一个步骤,都是高斯消元使得左部分变成单位矩阵然后右部分就是逆矩阵)

由于本题要取模运算,那么此时对1e9+7取模,而矩阵中的元素都是更小的数,那么就可以
使用费马小定理求乘法逆元
*/

void solve(){
    cin >> n;
    for(int i = 1;i <= n;i++){
        for(int j = 1;j <= n;j++){
            cin >> a[i][j];
            a[i][i + n] = 1;
        }
    }
    if(Gauss_Jordan()){
        for(int i = 1;i <= n;i++){
            for(int j = n + 1;j <= 2 * n;j++){
                cout << a[i][j] << " ";
            }
            cout << '\n';
        }
    } else {
        cout << "No Solution" << '\n';
    }
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int t = 1;
    //cin >> t;
    while(t--){
        solve();
    }
    return 0;
}