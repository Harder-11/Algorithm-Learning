import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.*;
import java.lang.*;
import java.io.*;


public class Learn {
    /*
    二维数组上范围增加,范围查询,使用树状数组(p4514)
    (这道题洛谷卡Java的空间,会导致MLE,Java过不了)
    差分数组中和原数组的关系是:D[i][j]=A[i][j]-A[i-1][j]-A[i][j-1]+A[i-1][j-1]
    在差分数组中,要范围修改,只需要修改(a,b)+v,(a,d+1)-v,(b,c+1)-v,(c+1,d+1)+v
    Σ(x=1,i)Σ(y=1,j)D[x][y]就是利用差分数组对原二维数组的单点查询
    那么此时求sum(1,1,n,m)=Σ(i=1,n)Σ(i=1,m)Σ(x=1,i)Σ(y=1,j)D[x][y]
    对于每个差分数组的格子D[x][y],会被调用从自己本身到右下(包括右边和下标所有格子)
    没到一个格子都会被调用一次,所以可以简化为
    Σ(i=1,n)Σ(j=1,m)D[i][j]*(n-i+1)*(m-j+1),然后展开得到四个差分信息:
    D[i][j],D[i][j]*i,D[i][j]*j,D[i][j]*i*j
     */
    public static int MAXN = 2050;
    //维护D[i][j]
    public static int[][] info1 = new int[MAXN][MAXN];
    //维护D[i][j]*i
    public static int[][] info2 = new int[MAXN][MAXN];
    //维护D[i][j]*j
    public static int[][] info3 = new int[MAXN][MAXN];
    //位数D[i][j]*i*j
    public static int[][] info4 = new int[MAXN][MAXN];
    public static int n,m;
    public static int lowbit(int i){
        return i & -i;
    }
    public static void add(int x,int y,int v){
        int v1 = v;
        int v2 = v * x;
        int v3 = v * y;
        int v4 = x * y * v;
        for(int i = x;i <= n;i += lowbit(i)){
            for(int j = y;j <= n;j += lowbit(j)){
                info1[i][j] += v1;
                info2[i][j] += v2;
                info3[i][j] += v3;
                info4[i][j] += v4;
            }
        }
    }
    public static int sum(int x,int y){
        int ans = 0;
        for(int i = x;i >= 0;i -= lowbit(i)){
            for(int j = y;j >= 0;j -= lowbit(j)){
                ans += (x + 1) * (y + 1) * info1[i][j] - (y + 1) * info2[i][j]
                        - (x + 1) * info3[i][j] + info4[i][j];
            }
        }
        return ans;
    }
    public static void add(int a,int b,int c,int d,int v){
        add(a,b,v);
        add(a,d + 1,-v);
        add(b,c + 1,-v);
        add(c + 1,d + 1,-v);
    }
    public static int range(int a,int b,int c,int d){
        return sum(c,d) - sum(a - 1,d) - sum(b - 1,c) + sum(a - 1,b - 1);
    }
}